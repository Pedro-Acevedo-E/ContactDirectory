<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

@model Login.Models.User

@{
    ViewData["Title"] = "Create";
    Layout = null;
}

<!DOCTYPE html>

<html>

<head>
    <title>Create User</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
        integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.1/css/all.css"
        integrity="sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP" crossorigin="anonymous">
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link rel="stylesheet" href="~/css/directorylayout.css" />
</head>

<body>
    <br />
    <div class="new_user_card">
        <h1 style="text-align: center;">Create User</h1>
        <form asp-action="Create" style="padding-top: 20px; width: 90%;">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Email" class="form-control" placeholder="email" />
            <span asp-validation-for="Email" class="text-danger"></span>
            <br />

            <input asp-for="Password" class="form-control input_pass" type="password" placeholder="password" />
            <span asp-validation-for="Password" class="text-danger"></span>
            <br />

            <input type="password" name="ConfirmPassword" class="form-control" placeholder="confirm password" />
            <span class="text-danger">@ViewData["PasswordError"]</span>

            <hr />
            <h6>Contacts (optional)</h6>
            <div class="form-group" id="contactsContainer"></div>
            <button class="normal-btn" type="button" onclick="addContact()">Click to add
                contact</button>
            <button style="display: none; width: 100%; background: #c0392b !important; color: white !important; border-radius: 5px;" type="button" id="removeLastContactBtn"
                onclick="removeLastContact()">Remove contact</button>
            <!--<button type="button" class="btn btn-default" id="addContact">Add Contact</button>--->
            <hr />
            <input class="normal-btn" type="submit" value="Create user" />
            <button class="normal-btn" asp-action="Login">Back to Login</button>
        </form>
    </div>
</body>

</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    let counter = 0;

    function addContact() {
        const newContactRow = document.createElement('div');
        newContactRow.classList.add('contact-row');

        const nameInput = document.createElement('input');
        nameInput.type = 'text';
        nameInput.name = `NewContacts.${counter}.Name`;
        nameInput.classList.add('form-control');
        nameInput.placeholder = 'Name';

        const lastNameInput = document.createElement('input');
        lastNameInput.type = 'text';
        lastNameInput.name = `NewContacts.${counter}.LastName`;
        lastNameInput.classList.add('form-control');
        lastNameInput.placeholder = 'Last Name';

        const phoneNumberInput = document.createElement('input');
        phoneNumberInput.type = 'text';
        phoneNumberInput.name = `NewContacts.${counter}.PhoneNumber`;
        phoneNumberInput.classList.add('form-control');
        phoneNumberInput.placeholder = 'Phone Number';

        // Append input elements to the contact row container
        newContactRow.appendChild(nameInput);
        newContactRow.appendChild(lastNameInput);
        newContactRow.appendChild(phoneNumberInput);

        // Get the container element
        const container = document.getElementById('contactsContainer');

        // Increment counter before appending to avoid duplicate IDs
        counter++;

        container.appendChild(newContactRow);

        const button = document.getElementById('removeLastContactBtn');
        button.style.display = '';

        setTimeout(() => {
            newContactRow.style.opacity = 1; // Animate opacity change in ms
        }, 50);
    }

    function removeLastContact() {
        // Get the container element
        const container = document.getElementById('contactsContainer');

        // Check if there are any contact rows
        const contactRows = container.querySelectorAll('.contact-row');
        if (contactRows.length === 0) {
            // Inform user that there are no contacts to remove (optional)
            return;
        }

        // Get the last contact row
        const lastRow = contactRows[contactRows.length - 1];

        // Remove the last contact row
        lastRow.remove();

        // Decrement counter (if applicable)
        counter--;

        if (counter <= 0) {
            const button = document.getElementById('removeLastContactBtn');
            button.style.display = 'none'; // Hide the button
        }
    }

    /*
    $(document).ready(function () {
        var currentIndex = 0;

        function reduceIndex() {
            currentIndex = currentIndex - 1;
        }

        $("#addContact").click(function () {
            var newContactRow = `
            <input type="text" name="NewContacts.${currentIndex}.Name" class="form-control" placeholder="name"/>
            <input type="text" name="NewContacts.${currentIndex}.LastName" class="form-control" placeholder="last name"/>
            <input type="text" name="NewContacts.${currentIndex}.PhoneNumber" class="form-control" placeholder="phone number"/>
            <button type="button" id="removeContact">Remove</button>
        `;

            currentIndex++;

            $("#contactsContainer").append(newContactRow);

            $("#removeContact").click(function () {
                reduceIndex();
                $(this).parent().remove();
            });
        });
    });
    */
</script>
